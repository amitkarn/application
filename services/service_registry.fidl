// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module app;

// An interface for creating and modifying a set of services.
[ServiceName="app.ServiceRegistry"]
interface ServiceRegistry {
  // Creates another interface to the same registry of services.
  //
  // Modifications made to the duplicated interface are reflected in this
  // interface and vice versa.
  Duplicate(ServiceRegistry& services);

  // Creates a copy of this registry of service.
  //
  // Modifications made to the forked registry are *not* reflected in this
  // registry and vice versa.
  //
  // This operation is implemented using a copy-on-write strategy, which means
  // forking is very efficient when neither the original or forked registry is
  // modified.
  Fork(ServiceRegistry& services);

  // Add a set of services with the given name to this registry.
  //
  // The services are fetched lazily from the given |directory|. The namespace
  // will not request entries from the |directory| that are not listed in
  // |names|.
  Add(array<string> names, handle<channel> directory);

  // Remove all the entries from this registry other than the names in the
  // given |whitelist|.
  Filter(array<string> whitelist);

  // Create a read-only view of this set of services as a directory.
  // TODO(abarth): Use the type Directory& once mxio adopts FIDL2.
  GetDirectory(handle<channel> directory_request);
};
