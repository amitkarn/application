// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module app;

import "application/services/application_controller.fidl";
import "application/services/service_provider.fidl";

// Information used to create an instance of an application and obtain
// services from it.
struct ApplicationLaunchInfo {
  // The location from which to retrieve this application.
  //
  // This field will probably be replaced with a stronger notion of identity,
  // such as an unforgeable token. This field is included in this iteration to
  // ease the transition from the previous application interfaces.
  string url;

  // The arguments to be provided to the application.
  array<string>? arguments;

  // The interface request for |services| is passed through to the application
  // and arrives in the application as its |outgoing_services| interface
  // request.
  ServiceProvider&? services;
};

// An interface for creating application instances.
//
// Typically obtained via |ApplicationEnvironment.GetApplicationLauncher|.
[ServiceName="app.ApplicationLauncher"]
interface ApplicationLauncher {
  // Creates a new instance of the application described by |launch_info|.
  //
  // The application instance is created in the |ApplicationEnvironment|
  // associated with this |ApplicationLauncher|. When creating the application,
  // the environment requests the environment services for this application from
  // its |ApplicationEnvironmentHost|.
  //
  // The |controller| can be used to control the lifecycle of the created
  // application instance. If an |ApplicationController|'s interface is
  // requested, the application instance is killed when the interface is closed.
  CreateApplication(ApplicationLaunchInfo launch_info,
                    ApplicationController&? controller);
};
